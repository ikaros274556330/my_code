"""__author__=余婷"""

print('==================第1题=================')
# 1.控制台输入年龄，根据年龄输出不同的提示(例如:老年人，青壮年，成年人，未成年，儿童)
age = int(input('请输入年龄:'))    # input输入的数据是字符串，需要先转换成int类型

# 后面的条件都是在前面的条件不成立的时候进行判断的
if age <= 12:
    print('儿童')
elif age < 18:
    print('未成年')
elif age <= 28:
    print('成年人')
elif age <= 50:
    print('壮年')
else:
    print('老年人')


print('==================第2题=================')
# 2.计算5的阶乘 5!的结果是
# 解题思路: 5! = 5*4*3*2*1, 先将1，2，3，4，5依次取出，再累计求乘积
sum1 = 1    # 保存最后的乘积，默认值为1
for num in range(1, 6):
    sum1 *= num
print('5!为:', sum1)


print('==================第3题=================')
# 3.求1+2!+3!+...+20!的和 1.程序分析：此程序只是把累加变成了累乘。
sum1 = 0    # 保存最后的和
sum2 = 1    # 保存1~20中，每个数的阶乘

# 依次取出1~20
for num in range(1, 21):
    sum2 *= num
    sum1 += sum2
print('1+2!+3!+...+20!为:', sum1)


print('==================第4题=================')
# 4.计算 1+1/2!+1/3!+1/4!+...1/20!=?
sum1 = 0    # 保存最后的和
sum2 = 1    # 保存1~20中，每个数的阶乘

# 依次取出1~20
for num in range(1, 21):
    sum2 *= num
    sum1 += 1/sum2
print('1+2!+3!+...+20!为:', sum1)


print('==================第5题=================')
# 5.循环输入大于0的数字进行累加，直到输入的数字为0，就结束循环，并最后输出累加的结果。
sum1 = 0
while True:
    num = int(input('请输入数字:'))
    sum1 += num
    # 如果输入为0，退出循环
    if num == 0:
        break
print('输入的数字的和:', sum1)


print('==================第6题=================')
# 6.求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。
# 例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加有键盘控制。
sum1 = 0   # 保存最后的和
a = 2
num = a    # 保存求和的每一项
n = 5      # 保存求和的项数
for _ in range(n):
    sum1 += num
    num = num * 10 + a    # 22 = 2*10+2; 222 = 22*10+2; 2222 = 222*10+2;...
print('最终的和位:', sum1)


print('==================第7题=================')
# 7.输入三个整数x,y,z，请把这三个数由小到大输出
x = int(input('请输入x:'))
y = int(input('请输入y:'))
z = int(input('请输入z:'))

# 先找到最小的一个数，存在x中
if x > y:
    x, y = y, x
if x > z:
    x, z = z, x
# 再找出y和z中较小的存在y中，最大的存在z中
if y > z:
    y, z = z, y
# 最后输出x,y,z的值即可
print(x, y, z)


print('==================第8题=================')
# 8.控制台输出三角形
print('========a========')
# a.根据n的值的不同，输出相应的形状
# 规律：从上往下每一行*的个数分别是5，4，3，2，1； 所以先将每一行的*的个数取到
n = 5
# num的取值分别是5，4，3，2，1
for num in range(n, 0, -1):
    # 打印每一行*
    for _ in range(num):
        print('*', end='')
    # 一行打印结束后需要打印换行
    print()

print('========b========')
# b.根据n的值的不同，输出相应的形状(n为奇数)
# 规律：每一行*的个数分别是1，3，5；*前的空格数分别是2，1，0； *的个数 + 空格数的2倍 == n
n = 5
# num的值分别是1， 3， 5
for num in range(1, n+1, 2):
    # 先输出空格
    space_count = int((n - num) / 2)
    for _ in range(space_count):
        print(' ', end='')
    # 再输出*
    for _ in range(num):
        print('*', end='')
    # 一行内容输出完成后换行
    print()


print('==================第9题=================')
# 9.输出9*9口诀。 程序分析：分行与列考虑，共9行9列，i控制行，j控制列。
# 第二个乘数行：每个表达式的第二个乘数是这个表达式所在的行数，第一行第二个乘数为1， 第2行第二个乘数都为2
#        第3行第二个乘数为3，....
# 第一个乘数：第一行是1； 第2行是：1，2；第3行是：1，2，3； ...
# i取出所有的行，也就是每一行的第二个乘数
for i in range(1, 10):
    # j控制每一行第一个乘数
    for j in range(1, i+1):
        # 按照a×b=c的格式输出每一个表达式
        # print(j, '×', i, '=', i*j, sep='', end=' ')
        print('%d×%d=%-2d' % (j, i, i*j), end=' ')    # 这个是格式字符串，后面会讲，不会可以先用上面那个方法
    # 一行结束后换行
    print()


print('==================第10题=================')
# 10.这是经典的"百马百担"问题，有一百匹马，驮一百担货，大马驮3担，中马驮2担，两只小马驮1担，问有大，中，小马各几匹？
# 注意: 目前可以使用穷举法
# 大马最多：100 // 3 == 33       -> x
# 中马最多: 100 // 2 == 50       -> y
# 小马最多： 100 * 2 == 200      -> z
for x in range(1, 34):
    for y in range(1, 51):
        for z in range(2, 101, 2):
            if x*3 + y*2 + z/2 == 100 and x + y + z == 100:
                print('大马:%d, 中马:%d, 小马:%d' % (x, y, z))
                break









