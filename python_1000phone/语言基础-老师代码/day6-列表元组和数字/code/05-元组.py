"""__author__=余婷"""

# 1.什么是元祖(tuple)
"""
元组就是不可变的列表
元组是容器型数据类型,将()作为容器的标志，里面多个元素用逗号隔开: (元素1,元素2,元素3,...)
元祖不可变(不支持增删改操作), 有序(支持下标操作)
元素可以是任何类型的数据
"""
tuple1 = (1, 2, 3)
print(type(tuple1))

# 2.和列表一样的操作
# 1)获取元素
# 列表获取元素的操作元组都支持
tuple2 = (10, 30, 21, 70)
print(tuple2[-1])
print(tuple2[1])
print(tuple2[2:])     # (21, 70)

# 2)相关运算: +, *, ==, !=, is, in, not in, len, max, min, sum,sorted
print((1, 2, 3) + ('abc', 'hello'))
print((1, 2, 3) * 3)

# tuple(数据)  -  将数据转换成元祖(数据必须是序列)
print(tuple('hello'))   # ('h', 'e', 'l', 'l', 'o')


# 3.元组特有或者使用频率偏高的操作
# 1)单个元素的元组: (元素,)
# list1 = [10]
# print(list1, type(list1))
tuple3 = (10,)
print(tuple3, type(tuple3))

# 2)单独使用的元组的值，()可以省略 -> 直接多个数据用逗号隔开表示的还是一个元组
tuple4 = 10, 20, 30
print(tuple4, type(tuple4))

# 3)可以通过让变量的个数和元组中元素的个数保持一致来分别获取元组中的元素
# 变量1, 变量2, 变量3, ... = 元祖
tuple5 = (10, 20)
x, y = tuple5
print(x, y)

# x, y = (10, 20)  -> x, y = 10, 20

# 4)同时声明多个变量获取元组中的元素，变量的个数可以比元组中元素的个数少，但是这个时候
# 多个变量中的某一个变量的前面必须加*；带*的变量可以获取不带*的变量获取完剩下的部分
tuple5 = (10, 20, 299, 19, 230)
*x1, x2, x3 = tuple5
print(x2, x3, x1)   # 19 230 [10, 20, 299]

x1, *x2, x3 = tuple5
print(x1, x2, x3)   # 10 [20, 299, 19] 230

x1, x2, *x3, x4 = tuple5
print(x1, x2, x3, x4)   # 10 20 [299, 19] 230


