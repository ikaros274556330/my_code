"""__author__=余婷"""
# 1.什么是返回值
"""
1）返回值的作用: 将函数里面的数据传递到函数外面
2）初学怎么确定需不需要返回子: 看函数的功能完成后会不会产生新的数据

3）怎么确定函数返回值: 函数声明的时候return后面的值就是函数的返回值;如果没有return，函数的返回值就是None
a. return:  关键字;只能出现在函数体中
            作用: 确定函数的返回值; 结束函数(执行函数体的时候如果遇到return函数直接结束,同时将return后面的值作为函数返回值)

4）怎么获取函数返回值: 函数调用表达式的值就是函数的返回值(获取函数调用表达式的值)
                    函数调用表达式: 函数调用语句; 普通数据能做的事情函数调用表达式都可以
                    
                    

"""

# ================1.确定函数返回===============
def yt_sum(num1, num2):
    return num1 + num2


def func1():
    print('=====')
    print('++++++')
    return     # return None
    print('------')


func1()


# ======================2.获取函数返回值====================
def func2(num):
    # num = 2
    # return 4
    return num*2


# a.函数调用表达式可以给变量赋值
# a = 4; print(a)
a = func2(2)
print(a)

# b. print(4+2)
print(func2(2)+2)


# c. [4, 10]; a=4, [a,10]
list1 = [func2(2), 10]
print(list1)   # [4, 10]

# yt_sum(4, 5)
re = yt_sum(func2(2), 5)
print(re)    # 9


def func3():
    return []


# [].append(100)
list2 = func3()
list2.append(100)
print(list2)


print('==========================================================')
# 2.函数调用过程
"""
1)执行过程:
a.回到函数声明的位置
b.传参 - 保证每个参数都值
c.执行函数体
d.执行完函数体确定返回值:  看执行完函数体的时候有没有遇到return,如果遇到了return后面的值就是返回值；没有遇到就是None
e.回到函数调用的位置(这个时候函数调用表达式的值才是函数的返回值)

2)内存变化: 函数的调用过程是一个压栈的过程
调用函数的时候系统会自动在栈区间为这个函数开辟一个专用的内存区域,专门用来保存在这个函数中声明的变量和产生的数据
(形参也是声明在函数的变量);当函数调用结束的时候，这个内存区域会自动销毁(销毁前会将返回值扔出来)

"""


def func4(n):
    # n=3
    print(n)
    return n*2   # return 6


a = func4(3)   # a = 6
print(a)

print(func4(4)+2)