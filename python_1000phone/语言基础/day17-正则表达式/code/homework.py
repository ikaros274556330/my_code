"""__author__=吴佩隆"""

import re

"""
1.写一个正则表达式判断一个字符串是否是ip地址  
规则：一个ip地址由4个数字组成，每个数字之间用.连接。每个数字的大小是0-255  

255.189.10.37   正确    

256.189.89.9    错误 
"""

# re_str = r'(([01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}([01]?\d{1,2}|2[0-4]\d|25[0-5])'
#
# print(re.fullmatch(re_str,'199.189.255.255'))

"""
2.写一个正则表达式可以匹配任意有效数字
123   正确；  23.34  正确；     -123  正确；  +12.34  正确； 0.232  正确； -0.233  正确

0123  错误； 012.23  错误；   00.23 错误

"""

# re_str = r'[+-]?0\.\d*[1-9]|[+-]?[1-9]\d*\.?\d*[1-9]'
#
# print(re.fullmatch(re_str, '31.0'))

"""
3.验证输入的内容只能是汉字
"""

# re_str = '[\u4e00-\u9fa5]*'
# print(re.fullmatch(re_str,'顿瑟夫'))

"""
4.电话号码的验证 
"""

# re_str = '1[3-9]\d{9}'
# print(re.fullmatch(re_str,'12985465166'))

"""
5.验证输入用户名和QQ号是否有效并给出对应的提示信息
要求：

用户名必须由字母、数字或下划线构成且长度在6~20个字符之间

QQ号是5~12的数字且首位不能为0

"""

# user_name = r'[a-zA-Z\d_]{6,20}'
# qq = r'[1-9]\d{4,11}'
#
#
# print(re.fullmatch(qq,'455454564'))

"""
6.验证是否是有效标识符: 由字母、数字、_组成并且数字不能开头
"""

# variable = r'[a-zA-Z_][a-zA-Z\d_]*'
# print(re.fullmatch(variable,'q'))